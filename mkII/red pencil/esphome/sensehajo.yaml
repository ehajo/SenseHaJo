esphome:
  name: sensehajo
  friendly_name: SenseHaJo
  project:
    name: "eHaJo.SenseHaJo"
    version: "0.1.0"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "123123"

ota:
  password: "123123"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Sensehajo Fallback Hotspot"
    password: "123123"

captive_portal:

# Globale Variablen:
globals:
   - id: _sensehajo_state
     type: int
     restore_value: no
     initial_value: '0'
        #  0 ... AUS
        # 10 ... STBY
        # 20 ... 1 Tasse kochen
        # 30 ... 2 Tassen kochen
        # 40 ... Spülen
   
   - id: _sensehajo_kaffeetemp
     type: float
     restore_value: yes
     initial_value: '80'
   
   - id: _sensehajo_stbytemp
     type: float
     restore_value: yes
     initial_value: '50'
   
   - id: _sensehajo_offtime
     type: float
     restore_value: yes
     initial_value: '80'
   
   - id: _sensehajo_bruehzeit
     type: float
     restore_value: yes
     initial_value: '80'
    
# LED Lichter der SenseHaJo:
light:
  - platform: neopixelbus # RGB-LEDs mit neopixel library
    id: "sensehajo_ws2812"
    type: GRB
    variant: WS2812
    pin: GPIO18              # LEDs hängen an GPIO4
    num_leds: 3             # 3 LEDs
    
  # Einzelne LEDs ansprechen:
  - platform: partition
    id: "sensehajo_LED1"    # LED 2 Tassen
    default_transition_length: 0s
    segments:
      - id: sensehajo_ws2812
        from: 0
        to: 0
  - platform: partition
    id: "sensehajo_LED2"    # LED Einschalter
    default_transition_length: 0s
    segments:
      - id: sensehajo_ws2812
        from: 1
        to: 1
  - platform: partition
    id: "sensehajo_LED3"    # LED 1 Tasse
    default_transition_length: 0s
    segments:
      - id: sensehajo_ws2812
        from: 2
        to: 2

# Eingänge:
binary_sensor:
  - platform: gpio
    id: "sensehajo_Taste1"
    pin:
      number: GPIO23
      inverted: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - light.toggle: sensehajo_LED1
  - platform: gpio
    id: "sensehajo_Taste2"
    pin:
      number: GPIO26
      inverted: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - light.toggle: sensehajo_LED2
  - platform: gpio
    id: "sensehajo_Taste3"
    pin:
      number: GPIO27
      inverted: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - light.toggle: sensehajo_LED3
  - platform: gpio
    id: "sensehajo_Hallsensor"
    pin:
      number: GPIO21
  - platform: gpio
    id: "sensehajo_Reed1"
    name: "Reed 1"
    pin:
      number: GPIO13
      inverted: true
  - platform: gpio
    id: "sensehajo_Reed2"
    name: "Reed 2"
    pin:
      number: GPIO34
      inverted: true
# Ausgänge:
switch:
  - platform: gpio # Ausgang Optotriac Pumpe
    pin: 5
    name: "SenseHaJo Pumpe"
    icon: mdi:water-pump
    restore_mode: ALWAYS_OFF
  - platform: gpio # Ausgang Optotriac Heizung
    id: gpio_heizung
    pin: 19
    name: "SenseHaJo Heizung"
    icon: mdi:thermometer-water
    restore_mode: ALWAYS_OFF
    
# Erfassung des Widerstandswertes via ADC1-CH0
sensor:
  - platform: ntc
    id: sensor_boilertemp
    sensor: tempsense_resistance
    calibration:
      b_constant: 3950
      reference_temperature: 25°C
      reference_resistance: 10kOhm
  - platform: resistance
    id: tempsense_resistance
    sensor: tempsense_source
    configuration: DOWNSTREAM
    resistor: 3.3kOhm
  - platform: adc
    id: tempsense_source
    attenuation: 11dB
    update_interval: 0.1s
    pin: GPIO36
    raw: true
    filters:
      - multiply: 0.00095238 # 3.9/4095, for attenuation 11db
      
number: 
  - platform: template
    name: "Kaffeetemperatur"
    id: kaffeetemp
    min_value: 20.0
    max_value: 90.0
    step: 1.0
    - number.set:
      id: kaffeetemp_set
      value: !lambda "return id(_sensehajo_kaffeetemp);"
    lambda: |-
      return id(_sensehajo_kaffeetemp);
    on_value:
      then:
        - lambda: !lambda |-
            id(_sensehajo_kaffeetemp) = id(kaffeetemp_set).state;
      
climate:
  - platform: thermostat
    name: "Boilertemperaturheizungsregelungshightechgedöns"
    sensor: sensor_boilertemp
    visual:
      min_temperature: 0
      max_temperature: 90
      temperature_step: 1
    min_heating_off_time: 1s
    min_heating_run_time: 1s
    min_idle_time: 1s
    heat_deadband: 2.0
    icon: mdi:coffee-maker
    heat_action:
      - switch.turn_on: gpio_heizung
    idle_action:
      - switch.turn_off: gpio_heizung
    default_preset: sleep
    on_boot_restore_from: default_preset
    preset:
      - name: eco
        default_target_temperature_low: 60 °C
        mode: heat
      - name: activity
        default_target_temperature_low: 80 °C
        mode: heat
      - name: sleep
        default_target_temperature_low: 10 °C
        mode: "OFF"
        